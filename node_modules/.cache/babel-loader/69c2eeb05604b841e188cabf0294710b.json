{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ayappa\\\\Documents\\\\react-proects\\\\it_logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG } from \"../actions/types\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return _objectSpread({}, state, {\n        logs: action.payload,\n        loading: false\n      });\n\n    case ADD_LOG:\n      return _objectSpread({}, state, {\n        logs: [...state.logs, action.payload],\n        loading: false\n      });\n\n    case DELETE_LOG:\n      return _objectSpread({}, state, {\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOGS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ayappa\\Documents\\react-proects\\it_logger\\src\\reducers\\logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","initialState","logs","current","loading","error","state","action","type","payload","filter","log","id"],"mappings":";;;;;;AAAA,SACCA,QADD,EAECC,WAFD,EAGCC,UAHD,EAICC,OAJD,EAKCC,UALD,EAMCC,WAND,EAOCC,aAPD,EAQCC,UARD,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKf,QAAL;AACC,+BACIa,KADJ;AAECJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFd;AAGCL,QAAAA,OAAO,EAAE;AAHV;;AAMD,SAAKR,OAAL;AACC,+BACIU,KADJ;AAECJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB,CAFP;AAGCL,QAAAA,OAAO,EAAE;AAHV;;AAKD,SAAKP,UAAL;AACC,+BACIS,KADJ;AAECJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAA3C,CAFP;AAGCL,QAAAA,OAAO,EAAE;AAHV;;AAKD,SAAKN,WAAL;AACC,+BACIQ,KADJ;AAECH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFjB;;AAID,SAAKV,aAAL;AACC,+BACIO,KADJ;AAECH,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKT,WAAL;AACC,+BACIY,KADJ;AAECF,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKT,UAAL;AACC,+BACIW,KADJ;AAECD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFf;;AAKD;AACC,aAAOH,KAAP;AA1CF;AA4CA,CA7CD","sourcesContent":["import {\r\n\tGET_LOGS,\r\n\tSET_LOADING,\r\n\tLOGS_ERROR,\r\n\tADD_LOG,\r\n\tDELETE_LOG,\r\n\tSET_CURRENT,\r\n\tCLEAR_CURRENT,\r\n\tUPDATE_LOG\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tlogs: null,\r\n\tcurrent: null,\r\n\tloading: false,\r\n\terror: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\r\n\t\tcase ADD_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: [...state.logs, action.payload],\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase DELETE_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: state.logs.filter(log => log.id !== action.payload),\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase SET_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: action.payload\r\n\t\t\t};\r\n\t\tcase CLEAR_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: null\r\n\t\t\t};\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase LOGS_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}