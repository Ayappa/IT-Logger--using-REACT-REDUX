{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Ayappa\\\\Documents\\\\react-proects\\\\it_logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayappa\\\\Documents\\\\react-proects\\\\it_logger\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport LogItem from \"./Logitems\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../layout/Preloader\";\n\nconst Logs = ({\n  log\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        logs = _useState2[0],\n        setLogs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" System Logs\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps)(Logs);","map":{"version":3,"sources":["C:\\Users\\Ayappa\\Documents\\react-proects\\it_logger\\src\\components\\logs\\Logs.js"],"names":["React","useState","useEffect","LogItem","connect","Preloader","Logs","log","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","id","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAAA,oBACCN,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAChBO,IADgB;AAAA,QACVC,OADU;;AAAA,qBAEOR,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,QAEhBS,OAFgB;AAAA,QAEPC,UAFO;;AAIvBT,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,OAAO,GADQ,CAEf;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAY;AAC3BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAPD;;AASA,MAAID,OAAJ,EAAa;AACZ,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACD,SACC;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,EAIE,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,GACA;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,GAGAT,IAAI,CAACU,GAAL,CAASX,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACY,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAPF,CADD;AAYA,CAjCD;;AAkCA,MAAMC,eAAe,GAACC,KAAK,KACvB;AACId,EAAAA,GAAG,EAACc,KAAK,CAACd;AADd,CADuB,CAA3B;;AAKA,eAAeH,OAAO,CAACgB,eAAD,CAAP,CAAyBd,IAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LogItem from \"./Logitems\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../layout/Preloader\";\r\n\r\nconst Logs = ({log}) => {\r\n\tconst [logs, setLogs] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLogs();\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tconst getLogs = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await fetch(\"/logs\");\r\n\t\tconst data = await res.json();\r\n\r\n\t\tsetLogs(data);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tif (loading) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\treturn (\r\n\t\t<ul className='collection with-header'>\r\n\t\t\t<li className='collection-header'>\r\n\t\t\t\t<h4 className='center'> System Logs</h4>\r\n\t\t\t</li>\r\n\t\t\t{!loading && logs.length === 0 ? (\r\n\t\t\t\t<p className='center'>No logs to show...</p>\r\n\t\t\t) : (\r\n\t\t\t\tlogs.map(log => <LogItem log={log} key={log.id} />)\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t);\r\n};\r\nconst mapStateToProps=state => (\r\n    {\r\n        log:state.log\r\n    }\r\n)\r\nexport default connect(mapStateToProps)(Logs);\r\n"]},"metadata":{},"sourceType":"module"}