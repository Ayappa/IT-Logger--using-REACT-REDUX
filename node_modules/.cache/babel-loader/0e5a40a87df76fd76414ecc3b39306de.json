{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayappa\\\\Documents\\\\react-proects\\\\it_logger\\\\src\\\\components\\\\logs\\\\Logs.js\";\nimport React, { useEffect } from \"react\";\nimport LogItem from \"./Logitems\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getLogs } from \"../../actions/logActions\";\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  if (loading && logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" System Logs\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"No logs to show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["C:\\Users\\Ayappa\\Documents\\react-proects\\it_logger\\src\\components\\logs\\Logs.js"],"names":["React","useEffect","LogItem","connect","Preloader","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AAA0BJ,EAAAA;AAA1B,CAAD,KAAyC;AACrDL,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,OAAO,GADQ,CAEf;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAII,OAAO,IAAID,IAAI,KAAK,IAAxB,EAA8B;AAC7B,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACD,SACC;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,EAIE,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,GACA;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,GAGAF,IAAI,CAACG,GAAL,CAASJ,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAPF,CADD;AAYA,CArBD;;AAuBAN,IAAI,CAACO,SAAL,GAAiB;AAChBN,EAAAA,GAAG,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AADN,CAAjB;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCV,EAAAA,GAAG,EAAEU,KAAK,CAACV;AADsB,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CACrBc,eADqB,EAErB;AAAEX,EAAAA;AAAF,CAFqB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport LogItem from \"./Logitems\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n\tuseEffect(() => {\r\n\t\tgetLogs();\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tif (loading && logs === null) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\treturn (\r\n\t\t<ul className='collection with-header'>\r\n\t\t\t<li className='collection-header'>\r\n\t\t\t\t<h4 className='center'> System Logs</h4>\r\n\t\t\t</li>\r\n\t\t\t{!loading && logs.length === 0 ? (\r\n\t\t\t\t<p className='center'>No logs to show...</p>\r\n\t\t\t) : (\r\n\t\t\t\tlogs.map(log => <LogItem log={log} key={log.id} />)\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nLogs.propTypes = {\r\n\tlog: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tlog: state.log\r\n});\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ getLogs }\r\n)(Logs);\r\n"]},"metadata":{},"sourceType":"module"}