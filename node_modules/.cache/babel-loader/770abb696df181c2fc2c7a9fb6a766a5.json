{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG } from \"./types\"; // export const getLogs = () => {\n// \treturn async (dispatch, getState) => {\n// \t\tsetLoading();\n// \t\tconst res = await fetch(\"/logs\");\n// \t\tconst data = await res.json();\n// \t\tdispatch({\n// \t\t\ttype: GET_LOGS,\n// \t\t\tpayload: data\n// \t\t});\n// \t};\n// };\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: error.res.data\n    });\n  }\n};\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs\", {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: error.res.data\n    });\n  }\n};\nexport const deleteLogs = id => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs/\".concat(id), {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: error.res\n    });\n  }\n};\nexport const setCurrent = log => async dispatch => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n};\nexport const clearCurrent = () => async dispatch => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs/\".concat(id), {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: error.res\n    });\n  }\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Ayappa\\Documents\\react-proects\\it_logger\\src\\actions\\logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","error","addLog","log","method","body","JSON","stringify","headers","deleteLogs","id","setCurrent","clearCurrent","updateLog"],"mappings":"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","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR ,ADD_LOG,DELETE_LOG, SET_CURRENT,CLEAR_CURRENT,UPDATE_LOG} from \"./types\";\r\n\r\n// export const getLogs = () => {\r\n// \treturn async (dispatch, getState) => {\r\n// \t\tsetLoading();\r\n// \t\tconst res = await fetch(\"/logs\");\r\n// \t\tconst data = await res.json();\r\n\r\n// \t\tdispatch({\r\n// \t\t\ttype: GET_LOGS,\r\n// \t\t\tpayload: data\r\n// \t\t});\r\n// \t};\r\n// };\r\n\r\nexport const getLogs = () => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\t\tconst res = await fetch(\"/logs\");\r\n\t\tconst data = await res.json();\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_LOGS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: error.res.data\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\n\r\n\r\nexport const addLog = (log) => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\t\tconst res = await fetch(\"/logs\",{\r\n            method:'POST',\r\n            body:JSON.stringify(log),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        });\r\n\t\tconst data = await res.json();\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_LOG,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: error.res.data\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\n\r\nexport const deleteLogs = (id) => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\t\tconst res = await fetch(`/logs/${id}`,{\r\n            method:'DELETE'\r\n        });\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_LOG,\r\n\t\t\tpayload: id\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: error.res\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\n\r\nexport const setCurrent = log => async dispatch => {\r\nreturn {\r\n    type:SET_CURRENT,\r\n    payload:log\r\n}\r\n}\r\nexport const clearCurrent = () => async dispatch => {\r\n    return {\r\n        type:CLEAR_CURRENT,\r\n      \r\n    }\r\n    }\r\n\r\n\r\n    export const updateLog = log => async dispatch => {\r\n        try {\r\n            setLoading();\r\n            const res = await fetch(`/logs/${id}`,{\r\n                method:'PUT',\r\n            body:JSON.stringify(log),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n            });\r\n    \r\n            dispatch({\r\n                type: DELETE_LOG,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOGS_ERROR,\r\n                payload: error.res\r\n            });\r\n        }\r\n    \r\n    };\r\n\r\n\r\n\r\n\r\n\r\nexport const setLoading = () => {\r\n\treturn { type: SET_LOADING };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}