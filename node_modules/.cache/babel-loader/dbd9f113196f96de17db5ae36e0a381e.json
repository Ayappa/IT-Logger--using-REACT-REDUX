{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ayappa\\\\Documents\\\\react-proects\\\\it_logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR } from '../actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Ayappa\\Documents\\react-proects\\it_logger\\src\\reducers\\logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","initialState","logs","current","loading","error","state","action","type"],"mappings":";;;;;;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,EAA6BC,UAA7B,QAA+C,kBAA/C;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAC,IADW;AAEhBC,EAAAA,OAAO,EAAC,IAFQ;AAGhBC,EAAAA,OAAO,EAAC,KAHQ;AAIhBC,EAAAA,KAAK,EAAC;AAJU,CAApB;AAOA,gBAAc,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA6B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,WAAL;AACI,+BACOO,KADP;;AAIR;AACI,aAAOA,KAAP;AARJ;AAUC,CAXD","sourcesContent":["import {GET_LOGS,SET_LOADING,LOGS_ERROR } from '../actions/types';\r\n\r\nconst initialState= {\r\n    logs:null,\r\n    current:null,\r\n    loading:false,\r\n    error:null\r\n}\r\n\r\nexport default(state=initialState,action)=>{\r\nswitch(action.type){\r\n\r\n    case SET_LOADING :\r\n        return{\r\n            ...state\r\n        }\r\n\r\ndefault:\r\n    return state;\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}